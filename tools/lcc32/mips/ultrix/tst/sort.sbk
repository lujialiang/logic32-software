.set reorder
.globl in
.data
.align 2
in:
.word 0xa
.word 0x20
.word 0xffffffff
.word 0x237
.word 0x3
.word 0x12
.word 0x1
.word 0xffffffcd
.word 0x315
.word 0x0
.globl main
.text
.text
.align 2
.ent main
main:
.frame $sp,24,$31
addu $sp,$sp,-24
.mask 0xc0000000,-4
sw $30,16($sp)
sw $31,20($sp)
la $4,in
la $5,10
jal sort
move $30,$0
b L.5
L.2:
sll $25,$30,2
lw $4,in($25)
jal putd
la $4,10
jal putchar
L.3:
la $30,1($30)
L.5:
la $25,10
bltu $30,$25,L.2
move $2,$0
L.1:
lw $30,16($sp)
lw $31,20($sp)
addu $sp,$sp,24
j $31
.end main
.globl putd
.text
.align 2
.ent putd
putd:
.frame $sp,24,$31
addu $sp,$sp,-24
.mask 0xc0000000,-4
sw $30,16($sp)
sw $31,20($sp)
move $30,$4
bge $30,$0,L.7
la $4,45
jal putchar
negu $30,$30
L.7:
la $25,10
div $25,$30,$25
beq $25,$0,L.9
la $25,10
div $4,$30,$25
jal putd
L.9:
la $25,10
rem $25,$30,$25
la $4,48($25)
jal putchar
L.6:
lw $30,16($sp)
lw $31,20($sp)
addu $sp,$sp,24
j $31
.end putd
.globl sort
.text
.align 2
.ent sort
sort:
.frame $sp,24,$31
addu $sp,$sp,-24
.mask 0x80000000,-8
sw $31,16($sp)
sw $4,24($sp)
sw $5,28($sp)
lw $25,0+24($sp)
sw $25,xx
move $4,$25
move $5,$0
lw $25,4+24($sp)
subu $25,$25,1
sw $25,4+24($sp)
move $6,$25
jal quick
L.11:
lw $31,16($sp)
addu $sp,$sp,24
j $31
.end sort
.globl quick
.text
.align 2
.ent quick
quick:
.frame $sp,40,$31
addu $sp,$sp,-40
.mask 0xc0e00000,-8
sw $21,16($sp)
sw $22,20($sp)
sw $23,24($sp)
sw $30,28($sp)
sw $31,32($sp)
move $30,$4
move $23,$5
move $22,$6
blt $23,$22,L.15
b L.14
L.15:
move $4,$30
move $5,$23
move $6,$22
jal partition
move $21,$2
move $4,$30
move $5,$23
subu $6,$21,1
jal quick
move $4,$30
la $5,1($21)
move $6,$22
jal quick
L.14:
lw $21,16($sp)
lw $22,20($sp)
lw $23,24($sp)
lw $30,28($sp)
lw $31,32($sp)
addu $sp,$sp,40
j $31
.end quick
.globl partition
.text
.align 2
.ent partition
partition:
.frame $sp,40,$31
addu $sp,$sp,-40
.mask 0xc0f00000,-4
sw $20,16($sp)
sw $21,20($sp)
sw $22,24($sp)
sw $23,28($sp)
sw $30,32($sp)
sw $31,36($sp)
move $30,$4
move $23,$5
move $22,$6
la $22,1($22)
move $20,$23
sll $25,$20,2
addu $25,$25,$30
lw $21,($25)
b L.20
L.19:
la $23,1($23)
b L.23
L.22:
la $23,1($23)
L.23:
sll $25,$23,2
addu $25,$25,$30
lw $25,($25)
blt $25,$21,L.22
subu $22,$22,1
b L.26
L.25:
subu $22,$22,1
L.26:
sll $25,$22,2
addu $25,$25,$30
lw $25,($25)
bgt $25,$21,L.25
bge $23,$22,L.28
sll $25,$23,2
addu $4,$25,$30
sll $25,$22,2
addu $5,$25,$30
jal exchange
L.28:
L.20:
blt $23,$22,L.19
sll $25,$20,2
addu $4,$25,$30
sll $25,$22,2
addu $5,$25,$30
jal exchange
move $2,$22
L.18:
lw $20,16($sp)
lw $21,20($sp)
lw $22,24($sp)
lw $23,28($sp)
lw $30,32($sp)
lw $31,36($sp)
addu $sp,$sp,40
j $31
.end partition
.globl exchange
.text
.align 2
.ent exchange
exchange:
.frame $sp,32,$31
addu $sp,$sp,-32
.mask 0xc0800000,-8
sw $23,16($sp)
sw $30,20($sp)
sw $31,24($sp)
move $30,$4
move $23,$5
la $4,L.33
lw $25,xx
la $24,4
subu $15,$30,$25
div $5,$15,$24
subu $25,$23,$25
div $6,$25,$24
jal printf
lw $25,($30)
sw $25,-4+32($sp)
lw $25,($23)
sw $25,($30)
lw $25,-4+32($sp)
sw $25,($23)
L.32:
lw $23,16($sp)
lw $30,20($sp)
lw $31,24($sp)
addu $sp,$sp,32
j $31
.end exchange
.globl xx
.comm xx,4
.rdata
.align 0
L.33:
.byte 101
.byte 120
.byte 99
.byte 104
.byte 97
.byte 110
.byte 103
.byte 101
.byte 40
.byte 37
.byte 100
.byte 44
.byte 37
.byte 100
.byte 41
.byte 10
.byte 0
